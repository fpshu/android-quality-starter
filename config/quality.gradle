apply plugin: 'checkstyle'
apply plugin: 'pmd'
apply plugin: "com.github.spotbugs"

dependencies {
    spotbugsPlugins 'com.mebigfatguy.fb-contrib:fb-contrib:7.0.5.sb'
}

task checkstyle(type: Checkstyle) {
    configFile file("${project.rootDir}/config/quality/checkstyle/checkstyle.xml")
    configProperties.checkstyleSuppressionsPath = file("${project.rootDir}/config/quality/checkstyle/suppressions.xml").absolutePath
    source 'src'
    include '**/*.java'
    exclude '**/gen/**'
    classpath = files()
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
    }
}

spotbugs {
    toolVersion = '3.1.1'
}

tasks.withType(rootProject.ext.spotbugsClass) {
    //change this to compileFlavourSource
    dependsOn 'compileDebugSources'

    ignoreFailures = false

    classes = files("$project.rootDir/app/build/intermediates/classes/dev/debug")
    //the higher the effort the slower it runs
    //min/default/max
    effort = "max"
    //low/medium/high
    reportLevel = "high"

    //change these to the exclude and include filters
    excludeFilter = new File("$qualityConfigDir/findbugs/findbugs-exclude.xml")
    includeFilter = new File("$qualityConfigDir/findbugs/findbugs-include.xml")

    reports {
        //only one can be enabled
        //no report writes to the console
        //does not impact speed
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$reportsDir/spotbugs/spotbugs.xml"
        }
        html {
            destination "$reportsDir/spotbugs/spotbugs.html"
        }
    }
}

task pmd(type: Pmd) {
    ignoreFailures = false
    ruleSetFiles = files("${project.rootDir}/config/quality/pmd/pmd-ruleset.xml")
    ruleSets = []

    source 'src'
    include '**/*.java'
    exclude '**/gen/**'

    reports {
        xml.enabled = false
        html.enabled = true
        xml {
            destination "$project.buildDir/reports/pmd/pmd.xml"
        }
        html {
            destination "$project.buildDir/reports/pmd/pmd.html"
        }
    }
}

android {
    lintOptions {
        abortOnError false
        xmlReport false
        htmlReport true
        lintConfig file("${project.rootDir}/config/quality/lint/lint.xml")
        htmlOutput file("$project.buildDir/reports/lint/lint-result.html")
        xmlOutput file("$project.buildDir/reports/lint/lint-result.xml")
    }
}
